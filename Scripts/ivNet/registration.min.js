var Registration = angular.module('ivNet.Registration', ['ngResource', 'trNgGrid', 'ui.bootstrap'])

Registration.factory('registration', function ($resource) {
    return $resource('/api/club/registration/:id', null,
    {
        'save': { method: 'Post' }

//        'save': {
//        method: 'Post',
//        interceptor: {
//    response: function(response) {
//        var data = response.resource;
//        data.$status = response.status;
//        return data;
//    }
//}
//}
    });
});

Registration.controller('RegistrationController', function ($scope, $filter, $http, registration) {
     
    $scope.reset = function() {
        resetForm();
    };

    $scope.save = function () {
        $('div.registration_message').hide();
        if ($scope.lastname.length *
            $scope.firstname.length *
            $scope.email.length *
            $scope.phone.length *
            $scope.address.length *
            $scope.postcode.length == 0) {
            $('.required').addClass('error');
        } else {
            var registrationData = {
                'Roles': $scope.roles,
                'Lastname': $scope.lastname,
                'Firstname': $scope.firstname,
                'Nickname': $scope.nickname,
                'Email': $scope.email,
                'Address': $scope.address,
                'Phone': $scope.phone,
                'Postcode': $scope.postcode,
                'Wards': $scope.wards
            };

            registration.save(JSON.stringify(registrationData),
               function (data) {
                   
                   resetForm();
                   $scope.registrationMessage = "Thank you for registering.";
                   $('div.registration_message').show();

               },
               function (error) {
                   if (error.status == 409) {
                       $scope.registrationMessage = error.data;
                       $('div.registration_message').show();
                   } else {
                       alert(error.data.Message + ' [' + error.data.MessageDetail + ']');
                   }
               });
        }
    };

    $scope.addWard = function() {
        $scope.wards.push({ lastname: '', firstname: '', nickname: '', dob: '' })
    };

    $scope.$watch('roles.player', function (newVal, oldVal) {
        $('div.player_input').hide();
        $('div.save_button').hide();
        if (newVal) {
            $('div.player_input').show()            
        }
        showButtons();
        showContact();
    });

    $scope.$watch('roles.guardian', function (newVal, oldVal) {
        $('div.guardian_input').hide();
        $('div.save_button').hide();
        if (newVal) {
            $('div.guardian_input').show()           
        }
        showButtons();
        showContact();
    });

    $scope.$watch('roles.officer', function (newVal, oldVal) {
        $('div.officer_input').hide();
        $('div.save_button').hide();
        if (newVal) {
            $('div.officer_input').show()           
        }
        showButtons();
        showContact();
    });

    Init();

    function resetForm() {
   
        $('label.select-button').removeClass('active');
          
        $('div.player_input').hide();
        $('div.guardian_input').hide();
        $('div.officer_input').hide();
        $('div.save_buttons').hide();
        $('div.contact_input').hide();
        $('div.name_input').hide();
        $('div.registration_message').hide();

        $scope.lastname = "";
        $scope.firstname = "";
        $scope.nickname = "";
        $scope.email = "";
        $scope.address = "";
        $scope.phone = "";
        $scope.postcode = "";

        $scope.wards = [];
    }

    function showButtons() {
        if ($scope.roles.player || $scope.roles.guardian || $scope.roles.officer) {
            $('div.save_buttons').show();
            $('div.name_input').show();
        }
    }

    function showContact() {
        if ($scope.roles.player || $scope.roles.guardian) $('div.contact_input').show();
    }

    function Init() {
        $scope.roles = {};
        $scope.roles.player = false;
        $scope.roles.guardian = false;
        $scope.roles.officer = false;

        resetForm();    
        $('.required').bind('click', function() {
            $('.required').removeClass('error');
        });
    }
});

Registration.controller('HelpController', function ($scope) {
    $scope.showModal = false;
    $scope.toggleModal = function () {
        $scope.showModal = !$scope.showModal;
    };
});

Registration.directive('modal', function () {
    return {
        template: '<div class="modal fade">' +
            '<div class="modal-dialog">' +
              '<div class="modal-content">' +
                '<div class="modal-header">' +
                  '<button type="button" class="close" data-dismiss="modal" aria-hidden="true">&times;</button>' +
                  '<h4 class="modal-title">{{ title }}</h4>' +
                '</div>' +
                '<div class="modal-body" ng-transclude></div>' +
              '</div>' +
            '</div>' +
          '</div>',
        restrict: 'E',
        transclude: true,
        replace: true,
        scope: true,
        link: function postLink(scope, element, attrs) {
            scope.title = attrs.title;

            scope.$watch(attrs.visible, function (value) {
                if (value == true)
                    $(element).modal('show');
                else
                    $(element).modal('hide');
            });

            $(element).on('shown.bs.modal', function () {
                scope.$apply(function () {
                    scope.$parent[attrs.visible] = true;
                });
            });

            $(element).on('hidden.bs.modal', function () {
                scope.$apply(function () {
                    scope.$parent[attrs.visible] = false;
                });
            });
        }
    };
});
