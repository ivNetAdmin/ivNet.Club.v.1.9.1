var Fixtures = angular.module('ivNet.Fixtures', ['ngResource', 'trNgGrid'])
.filter("fixtureDateField", function () {
    return function (combinedFieldValueUnused, item) {
        var d = item.DatePlayed;

        var curr_date = d.substr(8, 2);
        var curr_month = d.substr(5, 2);
        var curr_year = d.substr(0, 4);

        return curr_date + "/" + curr_month + "/" + curr_year;
    };
});

Fixtures.factory('configuration', function ($resource) {
    return $resource('/api/club/configuration/:id', null,
    {
        'query': { method: 'Get', isArray: true },
    });
});

Fixtures.factory('fixtures', function ($resource) {
    return $resource('/api/club/fixtures/', null,
    {
        'query': { method: 'Get', isArray: true },
    });

});

Fixtures.factory('fixture', function ($resource) {
    return $resource('/api/club/fixtures/:id', null,
    {
        'query': { method: 'Get', isArray: false },
    });
});

Fixtures.controller('FixtureController', function ($scope, $filter, configuration, fixtures, fixture) {

    $scope.viewFixture = function(gridItem) {
        $('#loading-indicator').show();
  
        fixture.query({ id: gridItem.FixtureId },
            function(data) {

                $scope.title = formattedDate(data.DatePlayed) + ": " + data.HomeTeam + " v " + data.Opposition;
                $scope.result = data.Result;
                $scope.resultType = data.ResultType;                
                $scope.resultTypeList = data.ResultTypeList
                $scope.teamPlayerList = data.TeamPlayerList;

                $scope.show_batting_stat_fields = ['Name', 'Runs', 'HowOut'];
                $scope.batting = data.FixtureStats.Batting;

                $scope.show_bowling_stat_fields = ['Name', 'Overs', 'Maidens', 'Runs', 'Wickets', 'Economy', 'Strike'];
                $scope.bowling = data.FixtureStats.Bowling;

                $scope.show_fielding_stat_fields = ['Name', 'Catches', 'Stumpings'];
                $scope.fielding = data.FixtureStats.Fielding;

                $('#loading-indicator').hide();

                $('div.fixture').hide();
                $('div.detail').show();
            },
            function(error) {
                $('#loading-indicator').hide();
                alert(error.data.Message + ' [' + error.data.MessageDetail + ']');
            });
    };

    $scope.backToList = function()
    {
        $('div.fixture').hide();
        $('div.stats-selector').show();
        $('div.list').show();
    }

    init();

    $scope.search = function() {
        $('#loading-indicator').show();
        fixtures.query({ year: $scope.year, team: $scope.team, player: $scope.player },
            function(data) {
                if (data.length > 0 && data[0].Player!=null) {
                    $scope.show_fixture_fields = ['Player', 'DatePlayed', 'HomeTeam', 'Opposition'];
                } else {
                    $scope.show_fixture_fields = ['DatePlayed', 'HomeTeam', 'Opposition'];
                }
                $scope.fixtures = data;
                $('#loading-indicator').hide();
            },
            function(error) {
                $('#loading-indicator').hide();
                alert(error.data.Message + ' [' + error.data.MessageDetail + ']');
            });
    };


    function init() {

       $('div.detail').hide();

        $('#loading-indicator').show();
        configuration.query({ id: 'stats_selector' },
            function (data) {
                $scope.yearList = filter(data, "year");
                $scope.teamList = filter(data, "team");

                $scope.year = $scope.yearList[$scope.yearList.length - 1].Name;
                $scope.team = "Sat 1st XI";
                $scope.search();
            },
            function (error) {
                $('#loading-indicator').hide();
                alert(error.data.Message + ' [' + error.data.MessageDetail + ']');
            });
    };

    function filter(collection, type) {
        var result = new Array();
        var length = collection.length;

        for (var j = 0; j < length; j++) {
            if (collection[j].Type == type) {
                result.push(collection[j]);
            }
        }

        return result;
    }

    function formattedDate(date) {
        var d = new Date(date || Date.now()),
            month = '' + (d.getMonth() + 1),
            day = '' + d.getDate(),
            year = d.getFullYear();

        if (month.length < 2) month = '0' + month;
        if (day.length < 2) day = '0' + day;

        return [day, month, year].join('/');
    }

});