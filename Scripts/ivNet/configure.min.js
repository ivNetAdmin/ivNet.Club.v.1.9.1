var Configuration = angular.module('ivNet.Configuration', ['ngResource', 'trNgGrid']);

Configuration.factory('configuration', function ($resource) {
    return $resource('/api/club/configuration/:id', null,
    {
        'query': { method: 'Get', isArray: true },
        'save': { method: 'Post' },
        'delete': { method: 'Delete' },
    });
});

Configuration.controller('ConfigurationController', function($scope, $filter, configuration) {

    init();

    $scope.getConfigItems = function (item) {
        $scope.item_type = item;
        configuration.query({ id: item },
            function (data) {
                $scope.show_config_fields = ['Id', 'Name'];
                $scope.items = data;
                $('div.add-button-block').show();
            },
            function(error) {
                alert(error.data.Message + ' [' + error.data.MessageDetail + ']');
            });
    };

    $scope.addConfigItem = function() {

        var itemValue = $('input#configItemValue').val();

        if (itemValue.length * $scope.item_type.length > 0) {

            var item = { 'Type': $scope.item_type, 'Name': itemValue };

            configuration.save(JSON.stringify(item),
                function(data) {

                    if (typeof data.Id != 'undefined') {
                        $scope.items.push({ Id: data.Id, Name: data.Name });
                    }
                    //  $scope.categories = $filter('orderBy')($scope.categories, "name")
                    $('input#configItemValue').val("");
                },
                function(error) {
                    alert(error.data.Message + ' [' + error.data.MessageDetail + ']');
                });
        }

    };

    $scope.delConfigItem = function (item) {
        var itemIndex = -1;
        $.each($scope.items, function (index, listItem) {
            if (listItem.Id == item.Id) {
                itemIndex = index;
            }
        });

        configuration.delete({ id: item.Id, type: $scope.item_type },
            function (data) {
                $scope.items.splice(itemIndex, 1);
            },
            function (error) {
                alert(error.data.Message + ' [' + error.data.MessageDetail + ']');
            });
    };

    function init() {
        //$('div#throbber').addClass('throbber-loader');
        //configuration.query({},
          //  function(data) {
                //$scope.categories = data.Categories;
                //$scope.transportList = data.TransportList;
                //$scope.roomTypes = data.RoomTypes;
                //$scope.tagList = data.TagTextList;
                //$('div#throbber').removeClass('throbber-loader');
            //},
           // function(error) {
           //     alert(error.data.Message + ' [' + error.data.MessageDetail + ']');
                //$('div#throbber').removeClass('throbber-loader');
           // });
    }

});

