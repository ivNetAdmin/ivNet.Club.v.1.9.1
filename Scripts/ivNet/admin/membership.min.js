var Membership = angular.module('ivNet.Admin.Membership', ['ngResource', 'trNgGrid'])
.filter("dateField", function () {
    return function (combinedFieldValueUnused, item) {
        var d = item.Dob;

        var curr_date = d.substr(8, 2);
        var curr_month = d.substr(5, 2);
        var curr_year = d.substr(0, 4);

        return curr_date + "/" + curr_month + "/" + curr_year;
    };
});

Membership.factory('configuration', function ($resource) {
    return $resource('/api/club/configuration/:id', null,
    {
        'query': { method: 'Get', isArray: true },
    });
});

Membership.factory('members', function ($resource) {
    return $resource('/api/club/members/:id', null,
    {
        'query': { method: 'Get', isArray: true },
        'update': { method: 'PUT' }
    });
});

Membership.factory('member', function ($resource) {
    return $resource('/api/club/members/:id', null,
    {
        'query': { method: 'Get', isArray: false },
        'check': { method: 'Post', isArray: false }
    });
});

Membership.controller('AdminMembershipController', function($scope, $filter, configuration, members, member) {

    $scope.DisableTypeSearch = function() {
        $scope.memberType = null;
    };

    $scope.checkKey = function(keyEvent) {

        if (keyEvent.which === 13) {
            $scope.search();
        }
    };

    $scope.checkWard = function() {
        $('#loading-indicator').show();
        $('div.user-message').hide();        

        if ($scope.newDob == null || $scope.newLastname == null || $scope.newFirstname == null) {
            $scope.usermessage = "You must enter a first, last name and a date of birth";
            $('div.user-message').show();
            return;
        }

        var model = {
            Type: 'Ward',
            Lastname: $scope.newLastname,
            Firstname: $scope.newFirstname
        };

        member.check({ data: model },
            function(data) {

                $scope.newLastname = data.Lastname;
                $scope.newFirstname = data.Firstname;                

                //if ($scope.newNickname != "") {
                //    $scope.newNickname = data.Nickname;
                //}
                //if (data.Dob != null) {
                //    $scope.newDob = data.Dob.substr(0, 10);
                //}

                if (data.MemberId > 0) {
                    $scope.usermessage = "This member (" + data.Firstname + " " + data.Lastname + ") already has one or more guardians (" + data.GuardianList + "). If this is a new player make sure they have a unique firstname and lastname.";
                    $('div.user-message').show();                    
                }

                if (checklist(data.MemberId)) {

                    $scope.wards.push({
                        MemberId: data.MemberId,
                        Firstname: $scope.newFirstname,
                        Lastname: $scope.newLastname,
                        Dob: $scope.newDob,
                        Nickname: $scope.newNickname
                    })
                }

                $scope.newFirstname = null;
                $scope.newLastname = null;
                $scope.newDob = null;
                $scope.newNickname = null;

                $('#loading-indicator').hide();   
            },
            function(error) {
                $('#loading-indicator').hide();
                alert(error.data.Message + ' [' + error.data.MessageDetail + ']');
            });
    };

    $scope.removeWard = function () {
        var item = this;
        var wardItemIndex = -1;
        $.each($scope.wards, function (wardIndex, wardItem) {
            if (wardItem.MemberId == item.ward.MemberId) {
                wardItemIndex = wardIndex;
            }
        });

        var data = {
            Action: "deactivate",
            Type: "Player",
            GuardianId: $scope.memberid
        };

        members.update({ id: item.ward.MemberId }, data,
            function () {
                $scope.wards.splice(wardItemIndex, 1);
            },
            function (error) {
                alert(error.data.Message + ' [' + error.data.MessageDetail + ']');
            });
    };

    $scope.search = function () {
        $('#loading-indicator').show();
        $('div.list').hide();
        $('div.detail').hide();
        $('div.user-message').hide();

        $scope.newLastname = "";
        $scope.newFirstname = "";
        $scope.newNickname = "";
        $scope.newDob = null;

       var active = "active";
        if ($scope.active && $scope.inactive) {
            active = "both";
        } else if ($scope.inactive) {
            active = "inactive";
        }
        if (active == "active") {
            $scope.active = true;
        }
        members.query({ type: $scope.memberType, member: $scope.member, active: active },
            function (data) {

                if ($scope.memberType == "Player") {
                    $scope.show_member_fields = ['Name', 'PlayerType', 'Dob'];
                } else if ($scope.memberType == "Guardian") {
                    $scope.show_member_fields = ['Name', 'WardList'];
                } else {
                    $scope.show_member_fields = ['Name', 'MemberTypeList', 'Dob'];
                }

                $scope.members = data;
                $('#loading-indicator').hide();               
                $('div.list').show();
            },
            function (error) {
                $('#loading-indicator').hide();
                alert(error.data.Message + ' [' + error.data.MessageDetail + ']');
            });
    };

    $scope.editMember = function (item) {
        $('#loading-indicator').show();
        $('div.list').hide();

        $scope.player = false;
        $scope.ward = false;
        $scope.guardian = false;
        $scope.official = false;

        member.query({ id: item.MemberId },
            function (data) {
                $scope.lastname = data.Lastname;
                $scope.firstname = data.Firstname;
                $scope.email = data.Email;
                $scope.phone = data.Phone;
                $scope.address = data.AddressLine;
                $scope.postcode = data.Postcode;
                $scope.wards = data.Wards;
                $scope.memberid = data.MemberId;

                $scope.ward = false;
                $scope.player = false;
                $scope.adult = false;

                $scope.detailFormWidth = 12;

                $.each(data.MemberTypList, function (typeIndex, typeItem) {

                    switch(typeItem) {
                        case "Player":
                            if (data.PlayerType == "S") {
                                $scope.player = true;
                                $scope.adult = true;
                                $('div#adult-info input').removeAttr('required');
                                $('div#adult-info input').attr('required', 'required');                                
                            } else {
                                $scope.ward = true;
                                $scope.player = true;
                                $('div#adult-info input').removeAttr('required');
                            }
                            break;
                        case "Guardian":
                            $scope.guardian = true;
                            $scope.adult = true;
                            $scope.detailFormWidth = 5;
                            break;
                        case "Officer":
                            $scope.official = true;
                    }
                });

                $('#loading-indicator').hide();
                $('div.detail').show();
            },
            function (error) {
                $('#loading-indicator').hide();
                alert(error.data.Message + ' [' + error.data.MessageDetail + ']');
            });
    }

    $scope.activateMember = function (item) {

        var memberItemIndex = -1;
        $.each($scope.members, function (memberIndex, memberItem) {
            if (memberItem.Id == item.Id) {
                memberItemIndex = memberIndex;
            }
        });

        var data = {
            Action: item.IsActive ? "deactivate" : "activate",
            Type: $scope.memberType
        };

        if (item.IsActive) {
            item.IsActive = false;
        } else {
            item.IsActive = true;
        }

        members.update({ id: item.MemberId }, data,
            function () {
                $scope.members.splice(memberItemIndex, 1);
                $scope.members.splice(memberItemIndex, 0, {
                    Id: item.Id,
                    MemberId: item.MemberId,
                    Name: item.Name,
                    PlayerType: item.PlayerType,
                    IsActive: item.IsActive
                });
            },
            function (error) {
                alert(error.data.Message + ' [' + error.data.MessageDetail + ']');
            });
    };

    $scope.showSearchResults = function () {
        $('div.detail').hide();
        $('div.list').show();
    };

    init();

    function init() {
        $scope.DisableTypeSearch();
        $('div.detail').hide();
        $('div.list').hide();
        $('div.user-message').hide();
        
        $('#loading-indicator').show();
        configuration.query({ id: 'member_type' },
            function (data) {
                $scope.memberTypeList = data; //filter(data, "type");

                $('#loading-indicator').hide();
            },
            function (error) {
                $('#loading-indicator').hide();
                alert(error.data.Message + ' [' + error.data.MessageDetail + ']');
            });
    };

    function filter(collection, type) {
        var result = new Array();
        var length = collection.length;

        for (var j = 0; j < length; j++) {
            if (collection[j].Type == type) {
                result.push(collection[j]);
            }
        }

        return result;
    };

    function checklist(memberId) {
        var newWard = true;
        $.each($scope.wards, function (wardIndex, wardItem) {
            if (wardItem.MemberId == memberId) {
                newWard = false;
            }
        });
        return newWard;
    }

});

Membership.controller('HelpController', function ($scope) {
    $scope.showModal = false;
    $scope.toggleModal = function () {
        $scope.showModal = !$scope.showModal;
    };
});

Membership.directive('modal', function () {
    return {
        template: '<div class="modal fade">' +
            '<div class="modal-dialog">' +
              '<div class="modal-content">' +
                '<div class="modal-header">' +
                  '<button type="button" class="close" data-dismiss="modal" aria-hidden="true">&times;</button>' +
                  '<h4 class="modal-title">{{ title }}</h4>' +
                '</div>' +
                '<div class="modal-body" ng-transclude></div>' +
              '</div>' +
            '</div>' +
          '</div>',
        restrict: 'E',
        transclude: true,
        replace: true,
        scope: true,
        link: function postLink(scope, element, attrs) {
            scope.title = attrs.title;

            scope.$watch(attrs.visible, function (value) {
                if (value == true)
                    $(element).modal('show');
                else
                    $(element).modal('hide');
            });

            $(element).on('shown.bs.modal', function () {
                scope.$apply(function () {
                    scope.$parent[attrs.visible] = true;
                });
            });

            $(element).on('hidden.bs.modal', function () {
                scope.$apply(function () {
                    scope.$parent[attrs.visible] = false;
                });
            });
        }
    };
});